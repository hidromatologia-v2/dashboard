# This docker compose will be used by API developers since it
# only starts the Databases and expose their ports

version: "3.3"

networks:
  server:
    external: false
  memphis:
    ipam:
      driver: default

services:
  # Testing service
  messages:
    networks:
      - server
      - memphis
    depends_on:
      - redis
      - postgres
    container_name: server-messages
    restart: unless-stopped
    image: ghcr.io/hidromatologia-v2/messages:latest
  alerts:
    networks:
      - server
      - memphis
    depends_on:
      - redis
      - postgres
    container_name: server-alerts
    restart: unless-stopped
    image: ghcr.io/hidromatologia-v2/alerts:latest
    environment:
      - MEMPHIS_PRODUCER_PRODUCER=message-producer-2
  stations:
    networks:
      - server
      - memphis
    depends_on:
      - redis
      - postgres
      - alerts
      - messages
    container_name: server-stations
    restart: unless-stopped
    image: ghcr.io/hidromatologia-v2/stations:latest
  users:
    networks:
      - server
      - memphis
    depends_on:
      - redis
      - postgres
      - alerts
      - messages
    container_name: server-users
    restart: unless-stopped
    image: ghcr.io/hidromatologia-v2/users:latest
  nginx:
    depends_on:
      - users
      - stations
    networks:
      - server
    container_name: server-nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - '127.0.0.1:8080:80'
    restart: unless-stopped
  # Dependencies
  postgres:
    networks:
      - server
    container_name: server-postgres
    restart: unless-stopped
    image: postgres:latest
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_DB: sulcud
      POSTGRES_USER: sulcud
      POSTGRES_PASSWORD: sulcud
  redis:
    networks:
      - server
    container_name: server-redis
    image: redis:latest
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
  mailhog:
    image: mailhog/mailhog
    container_name: server-mailhog
    restart: unless-stopped
    networks:
      - server # disable saving logs
    ports:
      - 127.0.0.1:1025:1025
      - 127.0.0.1:8025:8025
  # Mephis configutarion
  memphis-metadata:
    image: memphisos/memphis-metadata:15-docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U memphis -p 5005"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - memphis
    ports:
      - "5005:5005"
    environment:
      - POSTGRESQL_USERNAME=memphis
      - POSTGRESQL_PASSWORD=memphis
      - POSTGRESQL_DATABASE=memphis
      - POSTGRESQL_PORT_NUMBER=5005
  memphis:
    image: "memphisos/memphis:stable"
    depends_on:
      memphis-metadata:
        condition: service_healthy
    healthcheck:
      test: wget http://127.0.0.1:9000 --spider || exit 1
      interval: 10s
      retries: 30
      start_period: 5s
    restart: on-failure
    pull_policy: always
    networks:
      - memphis
    ports:
      - "9000:9000"
      - "6666:6666"
      - "7770:7770"
    environment:
      - ROOT_PASSWORD=memphis
      - DOCKER_ENV=true
      - ANALYTICS=true
      - USER_PASS_BASED_AUTH=true
      - CONNECTION_TOKEN=memphis
      - METADATA_DB_HOST=memphis-metadata
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  memphis-rest-gateway:
    image: "memphisos/memphis-rest-gateway:latest"
    depends_on:
      memphis:
        condition: service_healthy
    restart: on-failure
    pull_policy: always
    networks:
      - memphis
    ports:
      - "4444:4444"
    environment:
      - JWT_SECRET=JWT_TEST_PURPOSE
      - REFRESH_JWT_SECRET=REFRESH_JWT_TEST_PURPOSE
      - USER_PASS_BASED_AUTH=true
      - CONNECTION_TOKEN=memphis
      - ROOT_USER=root
      - ROOT_PASSWORD=memphis
      - MEMPHIS_HOST=memphis
      - HTTP_PORT=4444
